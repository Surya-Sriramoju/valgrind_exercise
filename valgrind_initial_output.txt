==5692== Memcheck, a memory error detector
==5692== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==5692== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==5692== Command: ./build/app/shell-app
==5692==
Averaged sensor reading: 10
==5692== Conditional jump or move depends on uninitialised value(s)
==5692==    at 0x109EBC: main (in /home/surya-software/valgrind/cpp-boilerplate-v2/build/app/shell-app)
==5692==
==5692==
==5692== HEAP SUMMARY:
==5692==     in use at exit: 44 bytes in 2 blocks
==5692==   total heap usage: 4 allocs, 2 frees, 73,772 bytes allocated
==5692==
==5692== 20 bytes in 1 blocks are indirectly lost in loss record 1 of 2
==5692==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==5692==    by 0x109D1F: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (in /home/surya-software/valgrind/cpp-boilerplate-v2/build/app/shell-app)
==5692==    by 0x109C3B: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (in /home/surya-software/valgrind/cpp-boilerplate-v2/build/app/shell-app)
==5692==    by 0x109B81: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (in /home/surya-software/valgrind/cpp-boilerplate-v2/build/app/shell-app)
==5692==    by 0x1099F8: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (in /home/surya-software/valgrind/cpp-boilerplate-v2/build/app/shell-app)
==5692==    by 0x1097AC: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (in /home/surya-software/valgrind/cpp-boilerplate-v2/build/app/shell-app)
==5692==    by 0x109532: std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) (in /home/surya-software/valgrind/cpp-boilerplate-v2/build/app/shell-app)
==5692==    by 0x10933A: AnalogSensor::Read() (in /home/surya-software/valgrind/cpp-boilerplate-v2/build/app/shell-app)
==5692==    by 0x109E9B: main (in /home/surya-software/valgrind/cpp-boilerplate-v2/build/app/shell-app)
==5692==
==5692== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2
==5692==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==5692==    by 0x10931E: AnalogSensor::Read() (in /home/surya-software/valgrind/cpp-boilerplate-v2/build/app/shell-app)
==5692==    by 0x109E9B: main (in /home/surya-software/valgrind/cpp-boilerplate-v2/build/app/shell-app)
==5692==
==5692== LEAK SUMMARY:
==5692==    definitely lost: 24 bytes in 1 blocks
==5692==    indirectly lost: 20 bytes in 1 blocks
==5692==      possibly lost: 0 bytes in 0 blocks
==5692==    still reachable: 0 bytes in 0 blocks
==5692==         suppressed: 0 bytes in 0 blocks
==5692==
==5692== Use --track-origins=yes to see where uninitialised values come from
==5692== For lists of detected and suppressed errors, rerun with: -s
==5692== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
